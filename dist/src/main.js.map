{"version":3,"sources":["main.js"],"names":[],"mappings":";;;;;;6BAGyC,iBAAiB;;AAH1D,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,CAAC;;AAExC,IAAI,wBAAwB,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;;AAE1E,IAAI,OAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACxC,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AACpB,IAAI,MAAM,CAAC;AACX,IAAI,MAAM,GAAG,SAAS,CAAC;AACvB,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAA;AACjC,IAAI,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClC,IAAI,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAE/B,IAAM,WAAW,GAAG,IAAI,CAAC;;AAEzB,IAAI,MAAM,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;;IAE5B,oBAAoB;UAApB,oBAAoB;wBAApB,oBAAoB;;;cAApB,oBAAoB;;;SACf,oBAAC,WAAW,EAAE;AACvB,SAAM,GAAG,WAAW,CAAC;GACrB;;;SACS,sBAAE;AACX,OAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;GACxB;;;SACY,yBAAE;AACd,OAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;GAC3B;;;SACY,yBAAE;AACd,OAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;GAC3B;;;QAZI,oBAAoB;;;AAe1B,SAAS,IAAI,GAAE;AACd,KAAI,UAAU,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;AACtC,KAAI,OAAO,GAAG,IAAI,OAAO,CAAC,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;AACzD,QAAO,CAAC,IAAI,EAAE,CAAC;AACf,KAAI,wBAAwB,GAAG,IAAI,wBAAwB,CAAC,QAAQ,EAAE,iCAAkB,OAAO,EAAE,IAAI,oBAAoB,EAAE,CAAC,CAAC,CAAC;AAC9H,WAAU,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;;AAElC,WAAU,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,OAAO,EAAE,GAAG,EAAK;AAC1C,0BAAwB,CAAC,cAAc,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EAC1D,CAAC,CAAC;;AAEH,IAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AAChC,KAAG,CAAC,IAAI,mCAAiC,MAAM,0BAAuB,CAAC;EACvE,CAAC,CAAC;AACH,OAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY;AACrC,MAAI,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;AACpC,MAAI,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;;AAEjC,SAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACjE,CAAC,CAAC;CACH;;AAED,IAAI,EAAE,CAAC","file":"main.js","sourcesContent":["require('source-map-support').install();\n\nvar AuctionMessageTranslator = require('../src/AuctionMessageTranslator');\nimport {AuctionSniper, PriceSource} from './AuctionSniper';\nvar Auction = require('../src/Auction');\nvar express = require('express');\nvar app = express();\nvar server;\nvar status = 'joining';\nvar redis = require('then-redis')\nvar itemToSnipe = process.argv[3];\nvar sniperId = process.argv[2];\n\nconst UNUSED_CHAT = null;\n\nvar client = redis.createClient();\n\nclass SniperStateDisplayer{ /* implements SniperListener*/\n\tshowStatus(show_status) {\n\t\tstatus = show_status;\n\t}\n\tsniperLost(){\n\t\tthis.showStatus('lost');\n\t}\n\tsniperBidding(){\n\t\tthis.showStatus('bidding');\n\t}\n\tsniperWinning(){\n\t\tthis.showStatus('winning');\n\t}\n}\n\nfunction main(){\n\tvar subscriber = redis.createClient();\n\tvar auction = new Auction(itemToSnipe, sniperId, client);\n\tauction.join();\n\tvar auctionMessageTranslator = new AuctionMessageTranslator(sniperId, new AuctionSniper(auction, new SniperStateDisplayer()));\n\tsubscriber.subscribe(itemToSnipe);\n\t\n\tsubscriber.on('message', (channel, msg) => {\n\t\tauctionMessageTranslator.processMessage(UNUSED_CHAT, msg);\n\t});\n\t\n\tapp.get('/', function (req, res) {\n\t\tres.send(`<html><body><div id=\"status\">${status}</div></body></html>`);\n\t});\n\tserver = app.listen(8888, function () {\n\t\tvar host = server.address().address;\n\t\tvar port = server.address().port;\n\n\t\tconsole.log('Example app listening at http://%s:%s', host, port);\n\t}); \n}\n\nmain();\n\n"],"sourceRoot":"/source/"}