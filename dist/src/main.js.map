{"version":3,"sources":["main.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC5C,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AACpB,IAAI,wBAAwB,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AACrE,IAAI,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC/C,IAAI,MAAM,CAAC;AACX,IAAI,KAAK,GAAG,SAAS,CAAC;AACtB,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAClC,IAAI,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClC,IAAI,SAAS,GAAG,QAAQ,CAAC;;AAEzB,SAAS,IAAI,GAAE;AACd,KAAI,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;AACrC,UAAS,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC,CAAC;AAClF,KAAI,UAAU,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;AACtC,WAAU,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;;AAElC,KAAI,OAAO,GAAG;AACb,KAAG,EAAE,aAAC,KAAK,EAAK;AACf,YAAS,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAL,KAAK,EAAC,CAAC,CAAC,CAAC;GACxF;EACD,CAAC;;AAEF,KAAI,MAAM,GAAG,IAAI,aAAa,CAAC,OAAO,EAAE;AACvC,YAAU,EAAE,sBAAM;AAAC,QAAK,GAAG,MAAM,CAAC;GAAC;AACnC,eAAa,EAAE,yBAAM;AAAC,QAAK,GAAG,SAAS,CAAC;GAAC;EACzC,CAAC,CAAC;AACH,KAAI,UAAU,GAAG,IAAI,wBAAwB,CAAC,MAAM,CAAC,CAAC;AACtD,WAAU,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,cAAc,CAAC,CAAC;;AAEpD,IAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AAChC,KAAG,CAAC,IAAI,sDACW,KAAK,gCACR,CAAC;EACjB,CAAC,CAAC;AACH,OAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY;AACrC,MAAI,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;AACpC,MAAI,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;;AAEjC,SAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACjE,CAAC,CAAC;CACH;;AAED,IAAI,EAAE,CAAC","file":"main.js","sourcesContent":["var express = require('express');\nvar sourcemaps = require(\"gulp-sourcemaps\");\nvar app = express();\nvar AuctionMessageTranslator = require('./AuctionMessageTranslator');\nvar AuctionSniper = require('./AuctionSniper');\nvar server;\nvar state = 'joining';\nvar redis = require('then-redis');\nvar itemToSnipe = process.argv[2];\nvar SNIPER_ID = 'sniper';\n\nfunction main(){\n\tvar publisher = redis.createClient();\n\tpublisher.publish(itemToSnipe, JSON.stringify({bidder: SNIPER_ID, type: 'join'}));\n\tvar subscriber = redis.createClient();\n\tsubscriber.subscribe(itemToSnipe);\n\n\tvar auction = {\n\t\tbid: (price) => {\n\t\t\tpublisher.publish(itemToSnipe, JSON.stringify({bidder: SNIPER_ID, type: 'bid', price}));\n\t\t}\n\t};\n\n\tvar sniper = new AuctionSniper(auction, {\n\t\tsniperLost: () => {state = 'lost';},\n\t\tsniperBidding: () => {state = 'bidding';}\n\t});\n\tvar translator = new AuctionMessageTranslator(sniper);\n\tsubscriber.on('message', translator.processMessage);\n\n\tapp.get('/', function (req, res) {\n\t\tres.send(`<html><head></head><body>\n\t\t<div id=\"status\">${state}</div>\n\t\t</body></html>`);\n\t});\n\tserver = app.listen(8888, function () {\n\t\tvar host = server.address().address;\n\t\tvar port = server.address().port;\n\n\t\tconsole.log('Example app listening at http://%s:%s', host, port);\n\t});\n}\n\nmain();\n\n"],"sourceRoot":"/source/"}