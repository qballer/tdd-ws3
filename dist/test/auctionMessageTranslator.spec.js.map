{"version":3,"sources":["auctionMessageTranslator.spec.js"],"names":[],"mappings":";;AAAA,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,CAAC;AACxC,IAAI,wBAAwB,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAC1E,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;;AAEpC,IAAM,WAAW,GAAG,IAAI,CAAC;;AAEzB,QAAQ,CAAC,iCAAiC,EAAE,YAAK;AAChD,KAAI,UAAU,CAAA;AACd,KAAI,QAAQ,CAAA;AACZ,OAAM,CAAC,EAAE,EAAC,YAAM;AACf,UAAQ,GAAG;AACV,gBAAa,EAAG,KAAK,CAAC,GAAG,EAAE;AAC3B,eAAY,EAAG,KAAK,CAAC,GAAG,EAAE;GAC1B,CAAC;AACF,YAAU,GAAG,IAAI,wBAAwB,CAAC,QAAQ,CAAC,CAAC;EACpD,CAAC,CAAC;;AAEH,GAAE,CAAC,mDAAmD,EAAE,YAAM;AAC7D,MAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;AAChD,YAAU,CAAC,cAAc,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;AAChD,QAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,wCAAwC,CAAC,CAAC;EACpF,CAAC,CAAC;;AAEH,GAAE,CAAC,0DAA0D,EAAE,YAAM;AACpE,MAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,GAAG,EAAE,SAAS,EAAC,CAAC,EAAE,MAAM,EAAC,cAAc,EAAC,CAAC,CAAC;AAC9F,YAAU,CAAC,cAAc,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;AAChD,QAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,uCAAuC,CAAC,CAAC;AAClF,QAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,8CAA8C,CAAC,CAAC;EACjG,CAAC,CAAC;;AAEH,UAAS,CAAC,EAAE,EAAE,YAAM,EAEnB,CAAC,CAAC;CACH,CAAC,CAAC","file":"auctionMessageTranslator.spec.js","sourcesContent":["require('source-map-support').install();\nvar AuctionMessageTranslator = require('../src/AuctionMessageTranslator');\nvar sinon = require('sinon');\nvar assert = require('chai').assert;\n\nconst UNUSED_CHAT = null;\n\ndescribe('auction message translator test', () =>{\n\tvar translator\n\tvar listener\n\tbefore('',() => {\n\t\tlistener = {\n\t\t\tauctionClosed : sinon.spy(), \n\t\t\tcurrentPrice : sinon.spy()\n\t\t};\n\t\ttranslator = new AuctionMessageTranslator(listener);\n\t});\n\t\n\tit('notify message closed when close message received', () => {\n\t\tvar message = JSON.stringify({event: 'closed'});\n\t\ttranslator.processMessage(UNUSED_CHAT, message);\n\t\tassert(listener.auctionClosed.calledOnce, 'listener.auctionClosed not called once');\n\t});\n\n\tit('notifies bid details when current price message received', () => {\n\t\tvar message = JSON.stringify({event: 'price', price:192, increment:7, bidder:'someone else'});\n\t\ttranslator.processMessage(UNUSED_CHAT, message);\n\t\tassert(listener.currentPrice.calledOnce, 'listener.currentPrice not called once');\n\t\tassert(listener.currentPrice.calledWith(192, 7), 'listener.currentPrice not called with 192, 7');\n\t});\n\n\tafterEach('', () => {\n\t\t\n\t});\n});"],"sourceRoot":"/source/"}